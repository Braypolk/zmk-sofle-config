/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#include <dt-bindings/led/led.h>

#define BASE 0
#define WORK 1
#define LOWER 2
#define RAISE 3
#define ADJUST 4

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/* END temporary RGB support section */

/ {

    // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
//    sensors {
//         compatible = "zmk,keymap-sensors";
//         sensors = <&left_encoder &right_encoder>;
//         triggers-per-rotation = <1>;
//     };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// | GESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  -_   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |  [{   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | !PLAY |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | RETURN| BSPC | ALT   | ALT   | RAISE|
            bindings = <
&gresc        &kp N1 &kp N2    &kp N3    &kp N4    &kp N5                                    &kp N6    &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB       &kp Q  &kp W     &kp E     &kp R     &kp T                                     &kp Y    &kp U     &kp I     &kp O    &kp P    &kp LBKT
&mt LCTRL ESC &kp A  &kp S     &kp D     &kp F     &kp G                                     &kp H    &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT     &kp Z  &kp X     &kp C     &kp V     &kp B      &ext_power EP_TOG    &kp C_PP  &kp N    &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                     &mo LOWER &to LOWER &kp LALT  &kp SPACE  &kp LGUI             &kp RET   &kp BSPC &kp RALT  &to RAISE &mo RAISE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        work {
            bindings = <
&trans    &trans &trans    &trans   &trans    &trans                      &trans    &trans   &trans    &trans   &trans   &trans
&trans    &kp Q  &kp D     &kp R    &kp W     &kp B                       &kp J     &kp F    &kp U     &kp P    &kp SEMI &trans
&trans    &kp A  &kp S     &kp H    &kp T     &kp G                       &kp Y     &kp N    &kp E     &kp O    &kp I    &trans
&trans    &kp Z  &kp X     &kp M    &kp C     &kp V  &trans       &trans  &kp K     &kp L    &kp COMMA &kp DOT  &kp FSLH &trans
                 &trans    &trans   &trans    &trans &trans       &trans  &trans    &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | `   | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |    =+ |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |    ]} |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |       |   \|  |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      | DEL  |      |       |      |
            bindings = <
&kp TILDE  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &none     &none     &none     &none     &none   &kp EQUAL 
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &none        &none                    &kp PG_UP &none     &kp UP    &none     &kp N0  &kp RBKT 
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &none        &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &none   &kp BSLH
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &none   &none    &none   &none     &none     &none     &none     &none   &trans 
                        &trans       &to BASE     &trans       &trans  &trans   &trans  &kp DEL   &trans    &to RAISE &trans 
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        raise_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// | `     |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp TILDE &kp F1    &kp F2     &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&trans    &kp N1    &kp N2     &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT     &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS  &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                    &mo ADJUST &to BASE    &to WORK  &trans    &trans   &trans &trans    &trans   &to LOWER       &to ADJUST
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        adjust_layer {
// -------------------------------------------------------------------------------------------------------------
// | hue+ | hue- | fast | slow  |       |       |                |      |      |       |      |       |        |
// | sat+ | sat- |      |       |       |       |                |      |      |       |      |       |        |
// |bright| dim  |      |       |       |       |                |      |      |       |      |       |        |
// | fx+  | fx+  |      |       |       |rgb tog|      |  |      |      |      |       |      |       | EP_TOG |
//               |      |       |       |       |      |  |      |      |      |       |      |

            bindings = <
&rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans  &trans                             &trans        &trans        &trans        &trans        &trans        &bt BT_CLR
&rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &trans           &trans           &trans  &trans                             &trans        &trans        &trans        &trans        &trans        &trans
&rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans           &trans           &trans  &trans                             &trans        &trans        &trans        &trans        &trans        &trans
&rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &trans           &trans           &trans  &rgb_ug RGB_TOG  &trans    &trans  &trans        &trans        &trans        &trans        &trans        &ext_power EP_TOG
                                  &trans           &to BASE         &trans  &trans           &trans    &trans  &trans        &trans        &trans        &trans
            >;
        };
    };
};